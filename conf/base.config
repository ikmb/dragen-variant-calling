process {
 
  // Global cluster parameters
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,140,7] ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  executor = "slurm"

  // software dependencies moved to conda.config

  withLabel: short_serial {
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 2.h * task.attempt, 'time' ) }
    cpus = 1 
  }
  withLabel: medium_serial {
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    cpus = 1 
  }
  withLabel: long_serial {
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
    cpus = 1 
  }
  withLabel: short_parallel {
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 2.h * task.attempt, 'time' ) }
    cpus = params.max_cpus/2
  }
  withLabel: medium_parallel {
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
    cpus = params.max_cpus/2
  }
  withLabel: long_parallel {
    memory = { check_max( 96.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
    cpus = params.max_cpus
  }
  withName:manta {
        time = { check_max( 3.h * task.attempt, 'time' ) }
        memory = { check_max( 24.GB * task.attempt, 'memory' ) }
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  }

  withLabel: 'dragen' {
	  queue = "dragen"
	  container = false
  }
  
  withName: 'MAKE_GVCF|MAKE_VCF|JOINT_CALL|TRIO_CALL' {
	    memory = { check_max( 250.GB * task.attempt, 'memory' ) }
      time = { check_max( 4.h * task.attempt, 'time' ) }
      cpus = 48
  }  
 
}

	

